trigger:
  branches:
    include:
      - develop
      - test
      - main

pool:
  vmImage: ubuntu-latest

variables:
  azureServiceConnection: 'Your-Service-Connection-Name'
  appNameDev: 'func-sofascore-dev-001'
  appNameTest: 'func-sofascore-test-001'
  appNameProd: 'func-sofascore-prod-001'
  appType: 'functionAppLinux'
  pythonVersion: $(pythonVersion)

stages:

# Build and deploy for the develop branch
- stage: BuildAndDeployDev
  displayName: Build and deploy Function App to development environment
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
  jobs:
  - template: ../../cicd-pipeline/az_func_build.yml
    parameters:
      pythonVersion: $(pythonVersion)
      appName: $(appNameDev)
      environment: 'dev'
  - template: ../../cicd-pipeline/az_func_deploy.yml
    parameters:
      azureSubscription: $(azureServiceConnection)
      appName: $(appNameDev)
      appType: $(appType)

# Build and deploy for the test branch
- stage: BuildAndDeployTest
  displayName: Build and deploy Function App to test environment
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/test')
  jobs:
  - template: ../../cicd-pipeline/az_func_build.yml
    parameters:
      pythonVersion: $(pythonVersion)
      appName: $(appNameTest)
      environment: 'test'
  - template: ../../cicd-pipeline/az_func_deploy.yml
    parameters:
      azureSubscription: $(azureServiceConnection)
      appName: $(appNameTest)
      appType: $(appType)

# Build and deploy for the main branch
- stage: BuildAndDeployProd
  displayName: Build and Deploy to Production
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs:
  - template: ../../cicd-pipeline/az_func_build.yml
    parameters:
      pythonVersion: $(pythonVersion)
      appName: $(appNameProd)
      environment: 'prod'
  - template: ../../cicd-pipeline/az_func_deploy.yml
    parameters:
      azureSubscription: $(azureServiceConnection)
      appName: $(appNameProd)
      appType: $(appType)


